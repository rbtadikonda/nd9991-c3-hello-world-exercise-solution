# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
            #command: "echo Hello, World!"
          command: 
            echo $MY_ENV_VAR
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo world
        
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml
          --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
          --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"     
          # - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_UD:0:7} --delete

  get_last_deployment_id:
    docker: 
      - image: amazon/aws-cli  
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
         name: Fetch and save the old pipeline ID (bucket name) responsible for the last release
         command: |
            aws cloudformation \
              list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
              --no-paginate --output text > ~/textfile.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - textfile.txt

  promote_to_production:        
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute cloudfront.yml
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
          --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"  

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-clie
    steps:
      - checkout
      - run: yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run:
          name: Destroy the previous S3 bucket and CloudFormation stack
          command: |
            export OldBucketID=${cat ~/textfile.txt}
            aws s3 rm "s3://${OldBucketID}" --recursive      

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  #say-hello-workflow:
  #jobs:
      # - say-hello
      # - print_world:
      #   requires:
      #    - say-hello
  my_workflow:
    jobs:
      - create_and_deploy_front_end
      - promote_to_production:
          requires:
            - create_and_deploy_front_end
      - get_last_deployment_id
      - clean_up_old_front_end
          requires:
            - get_last_deployment_id
            - promote_to_production        
